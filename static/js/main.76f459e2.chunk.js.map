{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","loading","person","a","fetch","response","json","data","console","log","this","setState","results","className","name","title","first","last","src","picture","large","alt","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAsCeA,E,4MAlCbC,MAAQ,CACNC,SAAS,EACTC,OAAQ,M,8FAGV,8BAAAC,EAAA,4DACc,6BADd,SAEyBC,MADX,8BADd,cAEQC,EAFR,gBAGqBA,EAASC,OAH9B,OAGQC,EAHR,OAIEC,QAAQC,IAAIF,GACZG,KAAKC,SAAS,CACZT,OAAQK,EAAKK,QAAQ,GAAIX,SAAS,IANtC,gD,0EAUA,WACE,OACE,qBAAKY,UAAS,MAAd,SACGH,KAAKV,MAAMC,UAAYS,KAAKV,MAAME,OACjC,6CAEA,gCACE,8BAAMQ,KAAKV,MAAME,OAAOY,KAAKC,QAC7B,8BAAML,KAAKV,MAAME,OAAOY,KAAKE,QAC7B,8BAAMN,KAAKV,MAAME,OAAOY,KAAKG,OAC7B,8BAAK,qBAAKC,IAAKR,KAAKV,MAAME,OAAOiB,QAAQC,MAAOC,IAAI,gB,GA3B9CC,aCUHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.76f459e2.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport '../src/App.css'\nclass App extends Component {\n\n  state = {\n    loading: true,\n    person: null,\n  }\n\n  async componentDidMount() {\n    const url = 'https://api.randomuser.me/'\n    const response = await fetch(url)\n    const data = await response.json()\n    console.log(data)\n    this.setState({\n      person: data.results[0], loading: false\n    })\n  }\n\n  render() {\n    return (\n      <div className={`App`}>\n        {this.state.loading || !this.state.person ? (\n          <div>loading...</div>\n        ) : (\n          <div>\n            <div>{this.state.person.name.title}</div>\n            <div>{this.state.person.name.first}</div>\n            <div>{this.state.person.name.last}</div>\n            <div><img src={this.state.person.picture.large} alt='' /></div>\n          </div>\n          \n        )}\n      </div>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}