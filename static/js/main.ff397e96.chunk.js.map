{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","loading","person","a","fetch","response","json","data","console","log","this","setState","results","className","name","title","first","last","dob","date","age","location","country","street","number","city","postcode","coordinates","latitude","longitude","email","phone","cell","src","picture","large","alt","login","username","password","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRA8EeA,E,4MA1EbC,MAAQ,CACNC,SAAS,EACTC,OAAQ,M,8FAGV,8BAAAC,EAAA,4DACc,6BADd,SAEyBC,MADX,8BADd,cAEQC,EAFR,gBAGqBA,EAASC,OAH9B,OAGQC,EAHR,OAIEC,QAAQC,IAAIF,GACZG,KAAKC,SAAS,CACZT,OAAQK,EAAKK,QAAQ,GAAIX,SAAS,IANtC,gD,0EAUA,WACE,OACE,qBAAKY,UAAS,MAAd,SACGH,KAAKV,MAAMC,UAAYS,KAAKV,MAAME,OACjC,6CAEA,gCACA,uBACE,uCACE,0CACUQ,KAAKV,MAAME,OAAOY,KAAKC,MAAM,uBADvC,eAEeL,KAAKV,MAAME,OAAOY,KAAKE,MAAM,uBAF5C,cAGcN,KAAKV,MAAME,OAAOY,KAAKG,WACvC,uBAEA,sCACE,+CACeP,KAAKV,MAAME,OAAOgB,IAAIC,KAAK,uBAD1C,QAEQT,KAAKV,MAAME,OAAOgB,IAAIE,UAChC,uBAEA,2CACE,4CACYV,KAAKV,MAAME,OAAOmB,SAASC,QAAQ,uBAD/C,WAEWZ,KAAKV,MAAME,OAAOmB,SAASE,OAAOC,OAAS,IAAMd,KAAKV,MAAME,OAAOmB,SAASE,OAAOT,KAAK,uBAFnG,SAGSJ,KAAKV,MAAME,OAAOmB,SAASI,KAAK,uBAHzC,UAIUf,KAAKV,MAAME,OAAOmB,SAASrB,MAAM,uBAJ3C,aAKaU,KAAKV,MAAME,OAAOmB,SAASK,SAAS,uBALjD,qBAMqBhB,KAAKV,MAAME,OAAOmB,SAASM,YAAYC,SAN5D,SAM4ElB,KAAKV,MAAME,OAAOmB,SAASM,YAAYE,gBACrH,uBAEA,0CACE,0CACUnB,KAAKV,MAAME,OAAO4B,MAAM,uBADlC,UAEUpB,KAAKV,MAAME,OAAO6B,MAAM,uBAFlC,SAGSrB,KAAKV,MAAME,OAAO8B,WAC7B,uBAEA,iDACE,8BACE,qBAAKC,IAAKvB,KAAKV,MAAME,OAAOgC,QAAQC,MAAOC,IAAI,UACnD,uBAEA,wCACE,8CACc1B,KAAKV,MAAME,OAAOmC,MAAMC,SAAS,uBAD/C,aAEa5B,KAAKV,MAAME,OAAOmC,MAAME,eACvC,uBAEA,wBACA,iC,GAnEMC,aCUHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ff397e96.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport '../src/App.css'\nclass App extends Component {\n\n  state = {\n    loading: true,\n    person: null,\n  }\n\n  async componentDidMount() {\n    const url = 'https://api.randomuser.me/'\n    const response = await fetch(url)\n    const data = await response.json()\n    console.log(data)\n    this.setState({\n      person: data.results[0], loading: false\n    })\n  }\n\n  render() {\n    return (\n      <div className={`App`}>\n        {this.state.loading || !this.state.person ? (\n          <div>loading...</div>\n        ) : (\n          <div>\n          <hr/>\n            <div>Name\n              <div>\n                Title: {this.state.person.name.title}<br />\n                First Name: {this.state.person.name.first}<br />\n                Last Name: {this.state.person.name.last}</div></div>\n            <hr/> \n\n            <div>DOB\n              <div>\n                Birth date: {this.state.person.dob.date}<br />\n                Age: {this.state.person.dob.age}</div></div>\n            <hr/>\n\n            <div>Location\n              <div>\n                Country: {this.state.person.location.country}<br />\n                Street: {this.state.person.location.street.number + ' ' + this.state.person.location.street.name}<br />\n                City: {this.state.person.location.city}<br />\n                State: {this.state.person.location.state}<br />\n                Postcode: {this.state.person.location.postcode}<br />\n                Coordinates:  Lat {this.state.person.location.coordinates.latitude}  Long{this.state.person.location.coordinates.longitude}</div></div>\n            <hr/>\n\n            <div>Contact\n              <div>\n                Email: {this.state.person.email}<br/>\n                Phone: {this.state.person.phone}<br/>\n                Cell: {this.state.person.cell}</div></div>\n            <hr/>\n\n            <div>Current Photo:\n              <div>\n                <img src={this.state.person.picture.large} alt='' /></div></div>\n            <hr/>\n\n            <div>Login\n              <div>\n                User Name: {this.state.person.login.username}<br/>\n                Password: {this.state.person.login.password}</div></div>\n            <hr/>\n\n            <div></div>\n            <div></div>\n          </div>\n\n        )}\n      </div>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}